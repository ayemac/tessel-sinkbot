function e(e){this.hardware=e,this.chipSelect=e.digital[0],this.reset=e.digital[1],this.irq=e.digital[2].rawWrite(!1),this.defaultSPISettings={clockSpeed:1e3,chipSelect:this.chipSelect,chipSelectDelayUs:30},this.spi=e.SPI(this.defaultSPISettings),this.transmitting=!1,this.listening=!1,this.chipSelect.output(!0),this.reset.output(!0),this.messageQueue=new o}var t=require("util"),i=require("events"),r=require("./attiny-isp"),o=require("sync-queue");t.inherits(e,i.EventEmitter),e.prototype.initialize=function(e,t,i){function r(e,t){return!!e&&(t&&t(Error("Unable to communicate with module. Are you sure it's plugged in?")),!0)}var o=this;t=t||{},o._reset(e,function(){o._establishCommunication(function(e,n,u){e?(console.warn("Could not retrieve firmware version and module ID. Attempting update."),o.updateFirmware(t,function(e){r(e,i)||o._establishCommunication(function(e,n,u){r(e,i)||o._checkModuleInformation(t,n,u,i)})})):o._checkModuleInformation(t,n,u,i)})})},e.prototype._checkModuleInformation=function(e,t,i,r){var o=this;if(e.moduleID==i&&e.firmwareVersion==t)r&&r();else if(255===t&&255===i||0===i||255===i)console.warn("Old module firmware detected. Updating..."),o.updateFirmware(e,r);else{if(i!=e.moduleID)return void(r&&r(Error("Wrong module plugged into port. Expected moduleID of "+e.moduleID+" but received "+i+" .Aborting Initialization.")));t!=e.firmwareVersion&&(console.warn("Module firmware version incompatible. Updating to correct version..."),o.updateFirmware(e,r))}},e.prototype._reset=function(e,t){this.reset.low(),this.reset.high(function(){setTimeout(t,e)})},e.prototype._establishCommunication=function(e){var t=this;t.getFirmwareVersion(function(i,r){if(i){if(e)return void e(i)}else t.getModuleID(function(t,i){e&&e(t,r,i)})})},e.prototype.getFirmwareVersion=function(e){this.getModuleInformation(1,e)},e.prototype.getModuleID=function(e){this.getModuleInformation(8,e)},e.prototype.getModuleInformation=function(e,t){var i=this;i.transceive(new Buffer([e,0,0]),function(r,o){if(r)return t(r,null);i._validateResponse(o,[85,e])&&3===o.length?t&&t(null,o[2]):t&&t(Error("Error retrieving Module Information."))})},e.prototype.updateFirmware=function(e,t){var i=this;r.updateFirmware(this.hardware,e,function(r){r?t&&t(Error("Unable to update firmware: "+r.message)):i._reset(function(){i.spi=i.hardware.SPI(i.defaultSPISettings),i.CRCCheck(e.crc,t)})})},e.prototype._validateResponse=function(e,t,i){var r,o=!0;for(r=0;r<t.length;r++)if(0!=t[r]&&t[r]!=e[r]){o=!1;break}return i&&i(o),o},e.prototype.setIRQCallback=function(e){this.irq.once("high",e)},e.prototype.transceive=function(e,t){var i=this;this.messageQueue.place(function(){i.spi.transfer(e,function(e,r){t&&t(e,r),setTimeout(i.messageQueue.next.bind(i),1)})})},e.prototype.CRCCheck=function(e,t){void 0==e&&t&&t(),this.getCRC(function(i,r){if(t){if(i)return void t(i);r!=e?t(Error("CRCs do not match.")):t()}})},e.prototype.getCRC=function(e){var t=this;t.transceive(new Buffer([7,0,0,0]),function(i,r){if(e){if(i)return void e(i);t._validateResponse(r,[85,7,!1,!1])&&4===r.length?e&&e(null,r[2]<<8|r[3]):e&&e(Error("Invalid response from CRC check."))}})},module.exports=e;